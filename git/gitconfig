[user]
	name = William Stewart
	email = william.stewart@booking.com
[commit]
	template = ~/.git_commit_msg.txt
[core]
	editor = vim
	excludesfile = ~/.gitignore
[credential]
	helper = osxkeychain
[format]
	signOff = true
[diff]
    tool = kitty
    guitool = kitty.gui
[difftool]
    prompt = false
    trustExitCode = true
[difftool "kitty"]
    cmd = kitty +kitten diff $LOCAL $REMOTE
[difftool "kitty.gui"]
    cmd = kitty kitty +kitten diff $LOCAL $REMOTE
[fetch]
	prune = true
	pruneTags = true
	recurseSubmodules = on-demand
[push]
	default = simple
[color]
	ui = true
[grep]
	lineNumber = true
	extendedRegexp = true
	threads = 64
	fallbackToNoIndex = true
#[status]
#	submoduleSummary = true
[alias]
	s = !~/.git_status.sh
	# s = status -s -b -uno
	sslow = status -s -b
	sfull = status
	st = status
	sb = status -s -b
	#############
	sa = stash apply
	sc = stash clear
	sd = stash drop
	sl = stash list
	sp = stash pop
	ss = stash save
	sw = stash show
	#############
	d = diff
	dc = diff --cached
	dl = difftool
	dlc = difftool --cached
	dk = diff --check
	dp = diff --patience
	dck = diff --cached --check
	#############
	c = commit
	ci = commit
	ca = commit -a
	cm = commit -m
	cem = commit --allow-empty -m
	cam = commit -am
	cd = commit --amend
	cad = commit -a --amend
	#############
	a = add .
	ai = add -i
	#############
	ap = apply
	as = apply --stat
	ac = apply --check
	#############
	ama = am --abort
	amr = am --resolved
	ams = am --skip
	#############
	l = log --oneline
	lg = log --oneline --graph --decorate
	#############
	o = checkout
	ob = checkout -b
	#############
	b = branch
	ba = branch -a
	bd = branch -d
	br = branch -r
	#############
	f = fetch
	fo = fetch origin
	#############
	fp = format-patch
	#############
	fk = fsck
	#############
	m = merge
	ma = merge --abort
	mc = merge --continue
	ms = merge --skip
	#############
	pr = prune -v
	#############
	ps = push
	psf = push -f
	psu = push -u
	pso = push origin
	psao = push --all origin
	psfo = push -f origin
	psuo = push -u origin
	psom = push origin master
	psfom = push -f origin master
	psuom = push -u origin master
	#############
	pl = pull
	plu = pull -u
	plo = pull origin
	plp = pull upstream
	plom = pull origin master
	plot = pull origin trunk
	plpm = pull upstream master
	#############
	pb = pull --rebase
	pbo = pull --rebase origin
	pbp = pull --rebase upstream
	pbom = pull --rebase origin master
	pbpm = pull --rebase upstream master
	#############
	rb = rebase
	rba = rebase --abort
	rbc = rebase --continue
	rbi = rebase --interactive
	rbs = rebase --skip
	#############
	re = reset
	rh = reset HEAD
	reh = reset --hard
	rem = reset --mixed
	res = reset --soft
	rehh = reset --hard HEAD
	remh = reset --mixed HEAD
	resh = reset --soft HEAD
	#############
	r = remote
	ra = remote add
	rr = remote rm
	rv = remote -v
	rp = remote prune
	rs = remote show
	rao = remote add origin
	rso = remote show origin
	rpo = remote prune origin
	#############
	w = show
	wp = show -p
	wr = show -p --no-color
	#############
	ls = ls-files
	lsf = "!git ls-files | grep -i"
	#############
	svnr = svn rebase
	svnd = svn dcommit
	svnl = svn log --oneline --show-commit
	#############
	assume = update-index --assume-unchanged
	unassume = update-index --no-assume-unchanged
	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	unassumeall = "!git assumed | xargs git update-index --no-assume-unchanged"
	assumeall = "!git st -s | awk {'print $2'} | xargs git assume"
	#############
	ours = "!f() { git checkout --ours $@ && git add $@; }; f"
	theirs = "!f() { git checkout --theirs $@ && git add $@; }; f"
	#############
	whois = "!sh -c 'git log -i -1 --pretty=\"format:%an <%ae>\n\" --author=\"$1\"' -"
	whatis = show -s --pretty='tformat:%h (%s, %ad)' --date=short
	#############
	barebranch = !sh -c 'git symbolic-ref HEAD refs/heads/$1 && git rm --cached -r . && git clean -xfd' -
	flat = clone --depth 1
	single-branch = clone --single-branch
	human = name-rev --name-only --refs=refs/heads/*
	serve = !git daemon --reuseaddr --verbose	--base-path=. --export-all ./.git
	snapshot = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}"
	url = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha;	}; f"
	glurl = "!f() { sha=$(git rev-parse ${1:-HEAD}); hub browse -u -- commit/$sha;	}; f"
	commits = !hub browse -- commits
	issues = !hub browse -- issues
	wiki = !hub browse -- wiki
	settings = !hub browse -- settings
	sub-update = !git submodule update --remote --merge
	exec = "!exec "
	home = "rev-parse --show-toplevel"
[url "git@github.com:"]
	insteadOf = gh:
[url "git@gitlab.booking.com:"]
	insteadOf = https://gitlab.booking.com/
[hub]
	protocol = https
[color "diff-highlight"]
	oldNormal = red bold
	oldHighlight = red bold 52
	newNormal = green bold
	newHighlight = green bold 22
[filter "lfs"]
	clean = git-lfs clean -- %f
	smudge = git-lfs smudge -- %f
	required = true
	process = git-lfs filter-process
[interactive]
	diffFilter = "diff-highlight | less -FRX --tabs=4"
